{
  "timestamp": "2025-05-31T00:09:28.554Z",
  "totalDuration": 63499,
  "summary": {
    "passed": 2,
    "warnings": 0,
    "failed": 3,
    "timeouts": 0
  },
  "results": [
    {
      "suite": "Core Unit Tests",
      "status": "failed",
      "code": 1,
      "duration": 354,
      "output": "\u001b[34m=== DataPilot Test Suite ===\u001b[0m\n\u001b[33mTesting CLI at: /Users/massimoraso/Code/jseda/datapilot/bin/datapilot.js\n\u001b[0m\n\u001b[34m\nTesting eda command:\u001b[0m\n\u001b[31m✗ eda - test_sales.csv: ENOENT: no such file or directory, open '/Users/massimoraso/Code/jseda/datapilot/tests/outputs/eda_test_sales_output.txt'\u001b[0m\n\u001b[31mFatal error: ENOENT: no such file or directory, open '/Users/massimoraso/Code/jseda/datapilot/tests/outputs/eda_test_sales_output.txt'\u001b[0m\n",
      "errors": "- Initializing analysis...\n- Performing comprehensive EDA analysis...\n- Reading CSV file...\n✔ Processed 20 rows\n✔ Comprehensive EDA analysis complete!\n"
    },
    {
      "suite": "Safe Knowledge Base Tests",
      "status": "failed",
      "code": 1,
      "duration": 518,
      "output": "🧪 Testing Safe Knowledge Base Features\n\n\n🔍 Running: testBasicFunctionality\n✅ testBasicFunctionality PASSED\n\n🔍 Running: testConcurrentAccess\n❌ testConcurrentAccess FAILED: Only 4 tables found, expected at least 7\n\n🔍 Running: testBackupCreation\n   📁 Created 3 backup files\n✅ testBackupCreation PASSED\n\n🔍 Running: testErrorRecovery\n❌ testErrorRecovery FAILED: Invalid data was saved (validation failed)\n\n📊 Results: 2 passed, 2 failed\n",
      "errors": ""
    },
    {
      "suite": "TUI Tests",
      "status": "failed",
      "code": 1,
      "duration": 45000,
      "output": "DataPilot TUI Test Orchestrator\n================================\nPlatform: darwin (arm64)\nNode: v23.6.1\nTime: 2025-05-31T00:08:25.962Z\n\nWill run 3 test suites\n\nRunning: TUI Engine Unit Tests\n----------------------------------------\n🧪 Running TUI Engine Test Suite\\n\n✅ Engine initialization\n✅ Main menu choices structure\n✅ File discovery with mocked filesystem\n✅ File selection choices generation\n✅ File preview functionality\n✅ Analysis type choices\n✅ Analysis execution with mocked functions\n✅ Demo dataset discovery\n✅ Memory management operations\n✅ Error handling for invalid operations\n✅ State management and navigation\n✅ User flow simulation\n✅ Recent files management\n✅ File size formatting\n\\n📊 Test Results: 14 passed, 0 failed\n\nCompleted in 0.17s with exit code: 0\n========================================\n\nRunning: TUI Engine Flow Tests\n----------------------------------------\n🔄 Running TUI Flow Test Suite\\n\n✅ Complete EDA Analysis Flow\n✅ Complete Integrity Check Flow\n✅ Complete Suite Analysis Flow\n✅ Demo Mode Selection Flow\n✅ Demo Analysis Execution\n✅ Memory Manager Navigation Flow\n✅ Memory List and View Flow\n✅ Memory Deletion Flow\n✅ Memory Clear All Flow\n✅ Invalid File Handling Flow\n✅ Invalid Analysis Type Flow\n✅ Empty Dataset Handling Flow\n✅ Navigation Stack Management Flow\n✅ State Persistence Flow\n✅ Recent Files Management Flow\n✅ Full Analysis Session Journey\n✅ Memory Management Session Journey\n✅ Error Recovery Journey\n\\n📊 Flow Test Results: 18 passed, 0 failed\n\nCompleted in 0.14s with exit code: 0\n========================================\n\nRunning: Automated TUI Tests (E2E)\n----------------------------------------\n\u001b[34mDataPilot TUI Automated Tests\u001b[0m\nPlatform: darwin\nNode: v23.6.1\n\n\u001b[34mSuite: TUI Startup and Exit\u001b[0m\n  \u001b[36m▶\u001b[0m Should start and display welcome message\n    \u001b[31m✗\u001b[0m Error: Timeout waiting for pattern: /exit|thank|bye/i (2279ms)\n  \u001b[36m▶\u001b[0m Should handle immediate exit gracefully\n    \u001b[32m✓\u001b[0m Passed (2495ms)\n\n\u001b[34mSuite: File Selection\u001b[0m\n  \u001b[36m▶\u001b[0m Should browse for CSV files\n    \u001b[32m✓\u001b[0m Passed (397ms)\n  \u001b[36m▶\u001b[0m Should handle invalid file selection\n    \u001b[31m✗\u001b[0m Failed: Timeout waiting for pattern: /Enter the path|path to your CSV/i\n\n\u001b[34mSuite: Analysis Workflow\u001b[0m\n  \u001b[36m▶\u001b[0m Should complete demo analysis\n    \u001b[31m✗\u001b[0m Failed: Timeout waiting for pattern: /complete|Results|Done|finished|Press Enter|continue/i\n\n\u001b[33m⊘ Skipping suite: Windows-Specific Tests\u001b[0m\n\u001b[34mSuite: Encoding and Special Characters\u001b[0m\n  \u001b[36m▶\u001b[0m Should handle non-ASCII characters in prompts\n    \u001b[32m✓\u001b[0m Passed (288ms)\n\n\u001b[34mSuite: Performance and Stability\u001b[0m\n  \u001b[36m▶\u001b[0m Should handle rapid input without crashing\n    \u001b[32m✓\u001b[0m Passed (418ms)\n  \u001b[36m▶\u001b[0m Should recover from interrupted operations\n    \u001b[32m✓\u001b[0m Passed (2792ms)\n\n\u001b[34mSummary:\u001b[0m\n  \u001b[32mPassed: 5\u001b[0m\n  \u001b[31mFailed: 3\u001b[0m\n  \u001b[33mSkipped: 1\u001b[0m\n\n\u001b[31mErrors:\u001b[0m\n  TUI Startup and Exit > Should start and display welcome message\n    Timeout waiting for pattern: /exit|thank|bye/i\n  File Selection > Should handle invalid file selection\n    Timeout waiting for pattern: /Enter the path|path to your CSV/i\n  Analysis Workflow > Should complete demo analysis\n    Timeout waiting for pattern: /complete|Results|Done|finished|Press Enter|continue/i\n\nTest report saved to: /Users/massimoraso/Code/jseda/datapilot/tests/tui/tui_test_report.json\n\nCompleted in 44.64s with exit code: 1\n========================================\n\n\nTest Execution Summary\n========================================\nTotal Suites: 3\nPassed: 2\nFailed: 1\nTotal Duration: 44.95s\n\nDetailed report saved to: /Users/massimoraso/Code/jseda/datapilot/tests/tui_test_consolidated_report.json\nMarkdown report saved to: /Users/massimoraso/Code/jseda/datapilot/tests/TUI_TEST_RESULTS.md\n",
      "errors": ""
    },
    {
      "suite": "UI Fixes Verification",
      "status": "passed",
      "code": 0,
      "duration": 11096,
      "output": "\n🔍 DataPilot UI Fix Verification\n\n\n📋 Test: Escape Key Handling\n   Press ESC multiple times - should not crash\n   ❌ FAILED\n      - Found \"undefined\" in output\n      - Status messages still going to stderr\n\n📋 Test: No Artificial Delays\n   UI should start immediately\n   ❌ FAILED\n      - Took 1007ms (max: 1000ms)\n      - Status messages still going to stderr\n\n📋 Test: Stderr Usage Fixed\n   Status messages should go to stdout\n   ❌ FAILED\n      - Status messages still going to stderr\n\n📊 Summary\n\n✅ Passed: 0/3\n❌ Failed: 3/3\n\n🎯 Next Steps:\n\n1. ❌ Some fixes need more work\n2. Check the failed tests above\n3. Review the implementation\n",
      "errors": ""
    },
    {
      "suite": "All Integration Tests",
      "status": "passed",
      "code": 0,
      "duration": 6531,
      "output": "\u001b[34m\n🧪 DataPilot Comprehensive Test Suite\u001b[0m\n\u001b[34m=====================================\n\u001b[0m\n\u001b[33m📦 Unit Tests\u001b[0m\n\u001b[34m\n=== Running Parser Tests ===\u001b[0m\nRunning parser unit tests...\n\n=== Testing parseCSV ===\nDetected windows-1252 encoding (will handle automatically)\n📊 Parsing CSV: /Users/massimoraso/Code/jseda/datapilot/tests/unit/temp_test.csv\n📏 File size: 0.00MB\n🔤 Detected encoding: latin1\n📋 Detected delimiter: ,\n✅ Successfully parsed with latin1 encoding\n📊 Records: 3\n📋 Columns: 4\n✓ Basic CSV parsing works\nDetected windows-1250 encoding (will handle automatically)\n📊 Parsing CSV: /Users/massimoraso/Code/jseda/datapilot/tests/unit/temp_test.csv\n📏 File size: 0.00MB\n🔤 Detected encoding: latin1\n📋 Detected delimiter: ,\n✅ Successfully parsed with latin1 encoding\n📊 Records: 3\n📋 Columns: 2\n✓ Date parsing works\n\n=== Testing detectColumnTypes ===\n✓ Column type detection works\n✓ Australian pattern detection works\n\nParser tests completed\n\u001b[32m✓ Parser Tests passed (0.15s)\u001b[0m\n\u001b[34m\n=== Running Format Tests ===\u001b[0m\nRunning format unit tests...\n\n=== Testing formatNumber ===\n✓ Number formatting works\n\n=== Testing formatCurrency ===\n✓ Currency formatting works\n\n=== Testing formatPercentage ===\n✓ Percentage formatting works\n\n=== Testing formatDate ===\n✓ Date formatting works\n\n=== Testing formatFileSize ===\n✓ File size formatting works\n\n=== Testing section creation ===\n✓ Section creation works\n\n=== Testing list formatting ===\n✓ List formatting works\n\nFormat tests completed\n\u001b[32m✓ Format Tests passed (0.04s)\u001b[0m\n\u001b[34m\n=== Running Stats Tests ===\u001b[0m\nRunning statistics unit tests...\n\n=== Testing calculateStats ===\n✓ Basic statistics work\n✓ Null handling works\n✓ Outlier detection moved to separate function\n\n=== Testing calculateCorrelation ===\n✓ Correlation calculation works\n\n=== Testing analyzeDistribution ===\n✓ Distribution analysis works\n\n=== Testing findPatterns ===\n✓ Pattern detection works\n\nStatistics tests completed\n\u001b[32m✓ Stats Tests passed (5.04s)\u001b[0m\n\u001b[33m\n🖥️  TUI Tests\u001b[0m\n\u001b[34m\n=== Running TUI Engine Tests ===\u001b[0m\n🧪 Running TUI Engine Test Suite\\n\n✅ Engine initialization\n✅ Main menu choices structure\n✅ File discovery with mocked filesystem\n✅ File selection choices generation\n✅ File preview functionality\n✅ Analysis type choices\n✅ Analysis execution with mocked functions\n✅ Demo dataset discovery\n✅ Memory management operations\n✅ Error handling for invalid operations\n✅ State management and navigation\n✅ User flow simulation\n✅ Recent files management\n✅ File size formatting\n\\n📊 Test Results: 14 passed, 0 failed\n\u001b[32m✓ TUI Engine Tests passed (0.20s)\u001b[0m\n\u001b[34m\n=== Running TUI Flow Tests ===\u001b[0m\n🔄 Running TUI Flow Test Suite\\n\n✅ Complete EDA Analysis Flow\n✅ Complete Integrity Check Flow\n✅ Complete Suite Analysis Flow\n✅ Demo Mode Selection Flow\n✅ Demo Analysis Execution\n✅ Memory Manager Navigation Flow\n✅ Memory List and View Flow\n✅ Memory Deletion Flow\n✅ Memory Clear All Flow\n✅ Invalid File Handling Flow\n✅ Invalid Analysis Type Flow\n✅ Empty Dataset Handling Flow\n✅ Navigation Stack Management Flow\n✅ State Persistence Flow\n✅ Recent Files Management Flow\n✅ Full Analysis Session Journey\n✅ Memory Management Session Journey\n✅ Error Recovery Journey\n\\n📊 Flow Test Results: 18 passed, 0 failed\n\u001b[32m✓ TUI Flow Tests passed (0.14s)\u001b[0m\n\u001b[33m\n🔧 Command Tests\u001b[0m\n\u001b[34m\n=== Running EDA Command ===\u001b[0m\n\n╔═══════════════════════════════════════╗\n║          DataPilot CLI              ║\n║    Simple & LLM-Ready Analysis      ║\n║         Version 1.1.1             ║\n╚═══════════════════════════════════════╝\n\n\n✓ Analysis saved to: /tmp/eda_test.txt\n\nPreview of saved analysis:\nDetected ISO-8859-5 encoding (will handle automatically)\nWarning: ISO-8859-5 encoding not fully supported, using UTF-8 fallback\n📊 Parsing CSV: /Users/massimoraso/Code/jseda/datapilot/tests/fixtures/test_sales.csv\n📏 File size: 0.00MB\n🔤 Detected encoding: utf8\n📋 Detected delimiter: ,\n✅ Successfully parsed with utf8 encoding\n📊 Records: 20\n📋 Columns: 8\nColumn type detection took 21ms\n... (truncated)\n\u001b[32m✓ EDA Command passed (0.24s)\u001b[0m\n\u001b[34m\n=== Running INT Command ===\u001b[0m\n\n╔═══════════════════════════════════════╗\n║          DataPilot CLI              ║\n║    Simple & LLM-Ready Analysis      ║\n║         Version 1.1.1             ║\n╚═══════════════════════════════════════╝\n\n\n✓ Analysis saved to: /tmp/int_test.txt\n\nPreview of saved analysis:\nDetected windows-1252 encoding (will handle automatically)\n📊 Parsing CSV: /Users/massimoraso/Code/jseda/datapilot/tests/fixtures/test_sales.csv\n📏 File size: 0.00MB\n🔤 Detected encoding: latin1\n📋 Detected delimiter: ,\n✅ Successfully parsed with latin1 encoding\n📊 Records: 20\n📋 Columns: 8\n\n════════════════════════════════════════════════════════════\n... (truncated)\n\u001b[32m✓ INT Command passed (0.20s)\u001b[0m\n\u001b[34m\n=== Running VIS Command ===\u001b[0m\n\n╔═══════════════════════════════════════╗\n║          DataPilot CLI              ║\n║    Simple & LLM-Ready Analysis      ║\n║         Version 1.1.1             ║\n╚═══════════════════════════════════════╝\n\n\n✓ Analysis saved to: /tmp/vis_test.txt\n\nPreview of saved analysis:\nDetected windows-1252 encoding (will handle automatically)\n📊 Parsing CSV: /Users/massimoraso/Code/jseda/datapilot/tests/fixtures/test_sales.csv\n📏 File size: 0.00MB\n🔤 Detected encoding: latin1\n📋 Detected delimiter: ,\n✅ Successfully parsed with latin1 encoding\n📊 Records: 20\n📋 Columns: 8\n\n════════════════════════════════════════════════════════════\n... (truncated)\n\u001b[32m✓ VIS Command passed (0.19s)\u001b[0m\n\u001b[33m\n📚 Help Commands\u001b[0m\n\u001b[34m\n=== Running Main Help ===\u001b[0m\n\n╔═══════════════════════════════════════╗\n║          DataPilot CLI              ║\n║    Simple & LLM-Ready Analysis      ║\n║         Version 1.1.1             ║\n╚═══════════════════════════════════════╝\n\nUsage: datapilot [options] [command]\n\nCSV analysis tool optimized for LLM consumption\n\nOptions:\n  -V, --version         output the version number\n  -h, --help            display help for command\n\nCommands:\n  all [options] <file>  Run complete analysis suite - all commands in one go\n  eda [options] <file>  Exploratory Data Analysis - comprehensive statistical\n                        analysis\n  int [options] <file>  Data Integrity Check - find quality issues and\n                        inconsistencies\n  vis [options] <file>  Visualization Recommendations - what charts would be\n                        most insightful\n  eng [options] [file]  Data Engineering Archaeology - builds collective\n                        intelligence about your warehouse\n  llm [options] <file>  LLM Context Generation - perfect summary for AI\n                        analysis\n  ui                    🎨 Interactive UI - Fun, colorful, beginner-friendly\n                        interface\n  help [command]        display help for command\n\nExamples:\n  $ datapilot all data.csv                    # Run complete analysis\n  $ datapilot all \"C:\\My Data\\sales.csv\"      # Path with spaces (use quotes)\n  $ datapilot all data.csv -o analysis.txt    # Save to file\n  $ datapilot all data.csv --quick            # Quick mode\n  $ datapilot eda sales.csv --encoding latin1 # Force encoding\n  $ datapilot int data.csv --delimiter \";\"    # Force delimiter\n\nData Archaeology Workflow:\n  1. Analyze all tables: datapilot eng analyze *.csv\n  2. Copy LLM prompts and get insights from your AI\n  3. Save insights: datapilot eng save <table> \"<insights>\"\n  4. Generate report: datapilot eng report\n\nCommon Options:\n  -o, --output <path>      Save analysis to file\n  -q, --quick              Quick mode - skip detailed analyses\n  --no-header              CSV has no header row\n  --encoding <type>        Force encoding (utf8, latin1, utf16le)\n  --delimiter <char>       Force delimiter (comma, semicolon, tab, pipe)\n  --timeout <ms>           Set timeout in milliseconds (default: 30s for EDA, 60s for LLM)\n  --force                  Continue analysis despite data quality warnings\n  --comprehensive          Use comprehensive analysis for LLM mode (default: true)\n\nTroubleshooting:\n  • For paths with spaces, use quotes: \"C:\\My Folder\\data.csv\"\n  • For encoding issues, try: --encoding latin1\n  • For delimiter issues, try: --delimiter \";\"\n  • For large files, quick mode is recommended: --quick\n  • If analysis hangs, try: --timeout 120000 (2 minutes)\n  • For data quality issues, try: --force\n\nOutput:\n  All commands produce verbose text output optimized for\n  copying into ChatGPT, Claude, or any other LLM.\n\u001b[32m✓ Main Help passed (0.15s)\u001b[0m\n\u001b[34m\n=== Running EDA Help ===\u001b[0m\n\n╔═══════════════════════════════════════╗\n║          DataPilot CLI              ║\n║    Simple & LLM-Ready Analysis      ║\n║         Version 1.1.1             ║\n╚═══════════════════════════════════════╝\n\nUsage: datapilot eda [options] <file>\n\nExploratory Data Analysis - comprehensive statistical analysis\n\nOptions:\n  -o, --output <path>      Save analysis to file\n  -q, --quick              Quick mode - basic statistics only\n  --no-header              CSV file has no header row\n  --encoding <encoding>    Force specific encoding (utf8, latin1, etc.)\n  --delimiter <delimiter>  Force specific delimiter (comma, semicolon, tab,\n                           pipe)\n  --timeout <ms>           Set timeout in milliseconds (default: 30000)\n                           (default: \"30000\")\n  --force                  Continue analysis despite data quality warnings\n  -h, --help               display help for command\n\u001b[32m✓ EDA Help passed (0.14s)\u001b[0m\n\u001b[34m\n📊 Test Summary\u001b[0m\n\u001b[34m================\u001b[0m\n\u001b[34mTotal Tests: 10\u001b[0m\n\u001b[32mPassed: 10\u001b[0m\n\u001b[32mFailed: 0\u001b[0m\n\u001b[34mDuration: 6.49s\u001b[0m\n",
      "errors": "- Reading CSV file...\n✔ Processed 3 rows\nAssertion failed: Should parse as strings\nAssertion failed: Should handle empty values as empty strings\n- Reading CSV file...\n✔ Processed 3 rows\nAssertion failed: Should keep dates as strings\nAssertion failed: Should preserve date format\nAssertion failed: Should detect postcodes\n- Initializing analysis...\n- Performing comprehensive EDA analysis...\n- Reading CSV file...\n✔ Processed 20 rows\n✔ Comprehensive EDA analysis complete!\n- Initializing analysis...\n- Reading CSV file...\n- Reading CSV file...\n✔ Processed 20 rows\n✔ Data integrity analysis complete!\n- Initializing analysis...\n- Reading CSV file...\n- Reading CSV file...\n✔ Processed 20 rows\n✔ Visualization analysis complete!\n"
    }
  ]
}