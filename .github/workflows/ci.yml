name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Focus on Windows and Mac as requested, include Ubuntu for basic compatibility
        os: [windows-latest, macos-latest, ubuntu-latest]
        # Test on LTS versions
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Verify test files exist (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "Checking test files..."
        ls -la tests/unit/
        ls -la tests/tui/
        ls -la tests/fixtures/

    - name: Verify test files exist (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "Checking test files..."
        dir tests\unit\
        dir tests\tui\
        dir tests\fixtures\
      shell: cmd

    - name: Run comprehensive test suite
      run: node tests/run_all_tests.js
      timeout-minutes: 10

    - name: Test safe knowledge base features
      run: node tests/test_safe_knowledge_base.js
      timeout-minutes: 5
      continue-on-error: true

    - name: Verify CLI help functionality
      run: |
        node bin/datapilot.js --help
        node bin/datapilot.js eda --help
        node bin/datapilot.js int --help
        node bin/datapilot.js vis --help
        node bin/datapilot.js eng --help
        node bin/datapilot.js llm --help
        node bin/datapilot.js ui --help
        node bin/datapilot.js wui --help
        node bin/datapilot.js tui --help

    - name: Test core functionality (Unix)
      if: runner.os != 'Windows'
      run: |
        echo "Testing EDA analysis..."
        node bin/datapilot.js eda tests/fixtures/iris.csv --output /tmp/test_eda_output.txt
        echo "Testing Knowledge Base..."
        node bin/datapilot.js eng tests/fixtures/iris.csv

    - name: Test core functionality (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "Testing EDA analysis..."
        node bin/datapilot.js eda tests/fixtures/iris.csv --output C:\temp\test_eda_output.txt
        echo "Testing Knowledge Base..."
        node bin/datapilot.js eng tests/fixtures/iris.csv
      shell: cmd

    - name: Create test output directory (Windows)
      if: runner.os == 'Windows'
      run: |
        New-Item -ItemType Directory -Force -Path "$env:TEMP\datapilot-tests"
      shell: pwsh

    - name: Create test output directory (Unix)
      if: runner.os != 'Windows'
      run: mkdir -p /tmp/datapilot-tests

    - name: Upload test artifacts (Windows)
      if: runner.os == 'Windows' && always()
      uses: actions/upload-artifact@v4
      with:
        name: test-outputs-${{ matrix.os }}-${{ matrix.node-version }}
        path: |
          C:\Users\runneradmin\AppData\Local\Temp\*_test.txt
          C:\Users\runneradmin\AppData\Local\Temp\datapilot-tests\*
        retention-days: 7
        if-no-files-found: warn

    - name: Upload test artifacts (Unix)
      if: runner.os != 'Windows' && always()
      uses: actions/upload-artifact@v4
      with:
        name: test-outputs-${{ matrix.os }}-${{ matrix.node-version }}
        path: |
          /tmp/*_test.txt
          /tmp/datapilot-tests/*
        retention-days: 7
        if-no-files-found: warn